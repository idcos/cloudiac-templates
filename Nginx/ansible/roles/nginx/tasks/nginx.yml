---
- name: create tmp directory
  file:
    path: /tmp/nginx
    state: directory
    mode: 0755

- name: download nginx repo file
  get_url:
    url: "{{ SoftwareIp_path }}/nginx.repo"
    dest: "/etc/yum.repos.d/"
    mode: 0644
    force: yes
    validate_certs: no

- name: download nginx package
  get_url:
    url: "{{ SoftwareIp_path }}/nginx.tar.gz"
    dest: "/tmp/"
    mode: 0644
    force: yes
    validate_certs: no

- name: tar nginx package
  unarchive: 
    src: "/tmp/nginx.tar.gz"
    dest: "/tmp/nginx/"
    remote_src: yes

- name: install Dependent tools
  yum:
    name: zlib,zlib-devel,pcre,pcre-devel,openssl-devel,gcc,glibc,glibc-devel
    state: present

- name: install nginx
  yum:
    name: nginx-{{ sNginxVersion }}
    state: present

- name: create group appgrp
  group:
    name: appgrp
    gid: 600
    state: present

- name: create user idcos
  user:
    name: idcos
    uid: 600
    groups: appgrp
    password: "{{ 'idcospassword' | password_hash('sha512') }}"
    shell: /bin/bash
    home: /userhome/idcos
    expires: -1

- name: change directory onwer
  file:
    path: "{{ item }}"
    owner: idcos
    group: appgrp
    recurse: yes
  loop:
    - /var/log/nginx/
    - /etc/nginx
    - /var/cache/nginx/

- name: create pidpath_rootpath directory
  file:
    path: "{{ item }}"
    state: directory
    owner: idcos
    group: appgrp
    recurse: yes
  loop:
    - "{{ sPidPath }}"
    - "{{ srootPath }}"

- name: configure nginx.conf
  lineinfile:
    path: /etc/nginx/nginx.conf
    regexp: '^user'
    line: "user  idcos;"

- name: configure nginx.conf pidpath
  lineinfile:
    path: /etc/nginx/nginx.conf
    regexp: '^pid'
    line: "pid        {{ sPidPath }}/nginx.pid;"

- name: configure nginx.conf pidpath
  lineinfile:
    path: /etc/nginx/nginx.conf
    regexp: '    worker_connections'
    line: "    worker_connections  {{ sMaxConnections }};"

- name: configure nginx.conf pidpath
  lineinfile:
    path: /etc/nginx/nginx.conf
    regexp: '^worker_processes'
    line: "worker_processes  {{ sProcess }};"

- name: configure nginx.conf
  lineinfile:
    path: /etc/nginx/conf.d/default.conf
    regexp: '        root   /usr/share/nginx/html;'
    line: "        root   {{ srootPath }};"

- name: configure nginx.conf service Port
  vars:
    - servicePort: 81
  lineinfile:
    path: /etc/nginx/conf.d/default.conf
    regexp: '    listen'
    line: "    listen       {{ servicePort }};"

- name: start nginx service
  service:
    name: nginx
    state: started
    enabled: yes

